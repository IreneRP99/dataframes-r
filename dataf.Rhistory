# Cargar librerías necesarias
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(dplyr)
library(tidyr)
# Cargar el dataset mtcars y convertirlo en un dataframe
data(mtcars)
df <- as.data.frame(mtcars)
# Selección de columnas y filtrado de filas
df_filtered <- df %>%
select(mpg, cyl, hp, gear) %>%
filter(cyl > 4)
print("Seleccion y filtrado:")
print(df_filtered)
# Ordenación y renombrado de columnas
df_ordered <- df_filtered %>%
arrange(desc(hp)) %>%
rename(consumo = mpg, potencia = hp)
print("Ordenacion y renombrado:")
print(df_ordered)
# Creación de nuevas columnas y agregación de datos
df_transformed <- df_ordered %>%
mutate(eficiencia = consumo / potencia)
aggregated_data <- df_transformed %>%
group_by(cyl) %>%
summarise(consumo_medio = mean(consumo),
potencia_maxima = max(potencia))
print("Nueva columna y agregacion de datos:")
print(aggregated_data)
# Creación del segundo dataframe y union de dataframes
transmission_data <- data.frame(
gear = c(3, 4, 5),
tipo_transmision = c("Manual", "Automática", "Semiautomática")
)
joined_data <- df_transformed %>%
left_join(transmission_data, by = "gear")
print("Union de dataframes:")
print(joined_data)
# Transformación de formatos a largo y luego a ancho
long_data <- joined_data %>%
pivot_longer(cols = c(consumo, potencia, eficiencia),
names_to = "medida",
values_to = "valor")
print("Formato largo:")
print(long_data)
wide_data <- long_data %>%
group_by(cyl, gear, tipo_transmision, medida) %>%
summarise(valor = mean(valor, na.rm = TRUE)) %>%
pivot_wider(names_from = medida, values_from = valor)
print("Formato ancho:")
print(wide_data)
